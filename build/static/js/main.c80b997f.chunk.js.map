{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/personService.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Person","person","handleDelete","name","number","onClick","id","Persons","persons","filteredName","filter","toLowerCase","includes","map","key","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilteredName","message","infoMessage","setInfoMessage","useEffect","personService","initialPersons","className","event","console","log","target","preventDefault","some","p","window","confirm","find","newPerson","returnedPerson","setTimeout","catch","error","n","concat","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c80b997f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    \r\n    return (\r\n        <div>filter <input\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n        <div>name: <input\r\n          value={props.nameValue}\r\n          onChange={props.nameOnChange}\r\n        />\r\n        </div>\r\n        <div>number: <input\r\n          value={props.numberValue}\r\n          onChange={props.numberOnChange}\r\n        />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n\r\n    return (\r\n        <>{person.name} {person.number} <button onClick={handleDelete(person.id)}>delete</button><br></br></>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, filteredName, handleDelete}) => {\r\n    return (\r\n        persons.filter(person => person.name.toLowerCase().includes(filteredName.toLowerCase())).map(person =>\r\n            <Person\r\n                key={person.name}\r\n                person={person}\r\n                handleDelete={handleDelete}\r\n            />\r\n        )\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = 'https://mooc-fullstack-puhelinluettelo.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filteredName, setFilteredName] = useState('')\n  const [infoMessage, setInfoMessage] = useState({ message: null, type: null })\n\n  // InfoMessage\n  const Notification = ({ message, type }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  }\n\n  // Get persons from db\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n\n  }, [])\n\n  // Handle adding of persons to state and db\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameExists = persons.some(p => (p.name === newName))\n    if (nameExists) {\n      const confirmation = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (confirmation) {\n        const person = persons.find(p => p.name === newName)\n        const newPerson = { ...person, number: newNumber }\n        personService\n          .update(person.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n            setInfoMessage(\n              {\n                message: `Replaced the number of '${person.name}'`,\n                type: 'success'\n              }\n            )\n            setTimeout(() => {\n              setInfoMessage({ message: null, type: null })\n            }, 5000)\n          })\n          .catch(error => {\n            setInfoMessage(\n              {\n                message: `Information of '${person.name}' has already been removed from the server`,\n                type: 'error'\n              }\n            )\n            setTimeout(() => {\n              setInfoMessage({ message: null, type: null })\n            }, 5000)\n            setPersons(persons.filter(n => n.id !== person.id))\n          })\n      }\n    } else {\n      const person = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(person)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setInfoMessage(\n            {\n              message: `Added '${person.name}'`,\n              type: 'success'\n            }\n          )\n          setTimeout(() => {\n            setInfoMessage({ message: null, type: null })\n          }, 5000)\n        }\n        )\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    personService\n      .deletePerson(id)\n      .then(\n        setPersons(persons.filter(person => person.id !== id)),\n        setInfoMessage(\n          {\n            message: `Deleted '${person.name}'`,\n            type: 'success'\n          }\n        ),\n        setTimeout(() => {\n          setInfoMessage({ message: null, type: null })\n        }, 5000))\n      .catch(error => {\n        setInfoMessage(\n          {\n            message: `Information of '${person.name}' has already been removed from the server`,\n            type: 'error'\n          }\n        )\n        setTimeout(() => {\n          setInfoMessage({ message: null, type: null })\n        }, 5000)\n        setPersons(persons.filter(n => n.id !== person.id))\n      })\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilteredName(event.target.value)\n  }\n  const handleDelete = (id) => {\n    return () => {\n      const name = persons.filter(person => person.id === id)[0].name\n      const confirmation = window.confirm(`Delete ${name} ?`)\n      if (confirmation) {\n        deletePerson(id)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={infoMessage.message} type={infoMessage.type} />\n      <h2>Phonebook</h2>\n      <Filter value={filteredName} onChange={handleFilterChange} />\n      <h2>Add new</h2>\n      <PersonForm\n        onSubmit={addPerson}\n        nameValue={newName}\n        nameOnChange={handleNameChange}\n        numberValue={newNumber}\n        numberOnChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filteredName={filteredName} handleDelete={handleDelete} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}